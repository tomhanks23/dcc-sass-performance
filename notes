Start by showing how to launch compass watch

One of the main characteristics of writing good css is: Donâ€™t Repeat Yourself
	This leads to overusing class names by abstracting common css patterns into a class name
	Which is just another version of repeating yourself (and messing up your HTML)
		
		:: Demo ::
		Show how in normal css we might repeat a color several times
			The wrong way to correct this is to abstract that color as a class
				Now our HTML is polluted
			With sass we can make variables
				sometimes naming colors after their hue is easier (and it's not unsemantic)
				Over-abstraction can take away from readability
		
		:: /variable_tiles ::
		Audience, how would you solve the Uzinggo tiles?
		Show tiles demo and explain how it would be done with regular css by having
		.row and .col
			Then show how we can do it with sass in our demo

		:: /nesting ::
		Demo nested scss and over-selection
			name file as header.scss
			header nav.main ul li a.main-menu {}
			Explain right-to-left selectors
				And the performance impact of having too many selectors
			Explain over-selection
				And how it makes overriding more difficult

		:: /modules ::
			How mixins can help / or hurt
			Where @extend comes in
			Where %placeholders come in

		:: /mixins ::
			Try to only use mixins when arguments or @content are needed

		:: /mediaquery ::
			Example 1
				Disconnect between two selectors
				Have to repeat selectors
				Promotes the "everything has to break at the same point" pattern
			Example 2
				No more disconnect
				No more having to repeat the selector
				Promotes situational based breakpoints
				But we have to write the media query over and over which sucks
			Example 3
				The mixin way

			:: file organization ::
				/css

